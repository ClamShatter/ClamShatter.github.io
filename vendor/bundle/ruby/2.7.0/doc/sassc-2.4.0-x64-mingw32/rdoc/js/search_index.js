var search_data = {"index":{"searchIndex":["sassc","baseerror","dependency","engine","functionshandler","importhandler","importer","import","invalidstyleerror","native","sassboolean","sasscolor","sasserror","sasslist","sassmap","sassmappair","sassnull","sassnumber","sassstring","sassunknown","sassvalue","sasswarning","stringlist","notrenderederror","sass2scss","script","functions","value","bool","color","list","map","number","string","valueconversion","base","bool","color","list","map","number","string","syntaxerror","unsupportedvalue","util","normalizedmap","==()","==()","[]()","[]=()","_perform()","abstract()","alpha_string()","arguments_from_native_list()","as_stored()","assert_int!()","assert_valid_index()","attach_function()","backtrace()","basically_equal?()","basically_equal?()","bracketed()","caller_info()","clamp()","coerce()","coercion_factor()","comparable_to?()","compute_units()","context_get_included_files()","conversion_factor()","convert()","convertable?()","custom_functions()","delete()","denormalize()","dependencies()","deprecated()","dup()","each()","element_needs_parens?()","empty?()","epsilon()","eq()","eq()","eql?()","eql?()","eql?()","error()","filename()","formatted_function_name()","from_filenames()","from_native()","functions_handler()","has_key?()","hash()","hash()","hash()","hash()","hash()","hlsa?()","import_function()","import_handler()","imports()","imports_to_native()","inspect()","inspect()","inspect()","inspect()","inspect()","int?()","ironruby?()","is_unit?()","jruby?()","jruby_version()","keys()","legal_units?()","line_comments?()","load_paths()","load_paths()","make_data_context()","map()","map_keys()","method_missing()","native_string()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize()","normalize!()","null?()","omit_source_map_url?()","operate()","options()","options=()","options=()","output_style()","output_style_enum()","paths()","plus()","precision()","precision()","precision=()","precision_factor()","quiet?()","quote()","rails_env()","rails_root()","rbx?()","relative_path_from()","render()","respond_to_missing?()","return_string_array()","rgba?()","round()","round()","sans_common_units()","sass?()","sass_backtrace()","sass_warn()","sep_str()","separator()","separator()","setup()","setup()","silence_sass_warnings()","size()","sort_by()","source_map()","source_map_contents?()","source_map_embed?()","source_map_file()","string_get_type()","to_a()","to_a()","to_a()","to_bool()","to_h()","to_h()","to_hash()","to_i()","to_i()","to_native()","to_native()","to_native()","to_native()","to_native()","to_native()","to_native()","to_native_value()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sass()","to_sass()","to_sass()","to_sass()","to_sass()","to_sass()","unit_str()","unitless?()","update()","value()","values()","windows?()","with_contents()"],"longSearchIndex":["sassc","sassc::baseerror","sassc::dependency","sassc::engine","sassc::functionshandler","sassc::importhandler","sassc::importer","sassc::importer::import","sassc::invalidstyleerror","sassc::native","sassc::native::sassboolean","sassc::native::sasscolor","sassc::native::sasserror","sassc::native::sasslist","sassc::native::sassmap","sassc::native::sassmappair","sassc::native::sassnull","sassc::native::sassnumber","sassc::native::sassstring","sassc::native::sassunknown","sassc::native::sassvalue","sassc::native::sasswarning","sassc::native::stringlist","sassc::notrenderederror","sassc::sass2scss","sassc::script","sassc::script::functions","sassc::script::value","sassc::script::value::bool","sassc::script::value::color","sassc::script::value::list","sassc::script::value::map","sassc::script::value::number","sassc::script::value::string","sassc::script::valueconversion","sassc::script::valueconversion::base","sassc::script::valueconversion::bool","sassc::script::valueconversion::color","sassc::script::valueconversion::list","sassc::script::valueconversion::map","sassc::script::valueconversion::number","sassc::script::valueconversion::string","sassc::syntaxerror","sassc::unsupportedvalue","sassc::util","sassc::util::normalizedmap","sassc::script::value#==()","sassc::script::value::color#==()","sassc::util::normalizedmap#[]()","sassc::util::normalizedmap#[]=()","sassc::script::value#_perform()","sassc::util#abstract()","sassc::script::value::color#alpha_string()","sassc::functionshandler#arguments_from_native_list()","sassc::util::normalizedmap#as_stored()","sassc::script::value#assert_int!()","sassc::script::value::list::assert_valid_index()","sassc::native::attach_function()","sassc::syntaxerror#backtrace()","sassc::script::value::number#basically_equal?()","sassc::script::value::number::basically_equal?()","sassc::script::value#bracketed()","sassc::util#caller_info()","sassc::util#clamp()","sassc::script::value::number#coerce()","sassc::script::value::number#coercion_factor()","sassc::script::value::number#comparable_to?()","sassc::script::value::number#compute_units()","sassc::native::context_get_included_files()","sassc::script::value::number#conversion_factor()","sassc::sass2scss::convert()","sassc::script::value::number#convertable?()","sassc::script::custom_functions()","sassc::util::normalizedmap#delete()","sassc::util::normalizedmap#denormalize()","sassc::engine#dependencies()","sassc::util#deprecated()","sassc::util::normalizedmap#dup()","sassc::util::normalizedmap#each()","sassc::script::value::list#element_needs_parens?()","sassc::util::normalizedmap#empty?()","sassc::script::value::number::epsilon()","sassc::script::value::list#eq()","sassc::script::value::map#eq()","sassc::script::value#eql?()","sassc::script::value::color#eql?()","sassc::script::value::number#eql?()","sassc::functionshandler#error()","sassc::engine#filename()","sassc::script::formatted_function_name()","sassc::dependency::from_filenames()","sassc::script::valueconversion::from_native()","sassc::engine#functions_handler()","sassc::util::normalizedmap#has_key?()","sassc::script::value#hash()","sassc::script::value::color#hash()","sassc::script::value::list#hash()","sassc::script::value::map#hash()","sassc::script::value::number#hash()","sassc::script::value::color#hlsa?()","sassc::importhandler#import_function()","sassc::engine#import_handler()","sassc::importer#imports()","sassc::importhandler#imports_to_native()","sassc::script::value#inspect()","sassc::script::value::list#inspect()","sassc::script::value::map#inspect()","sassc::script::value::number#inspect()","sassc::script::value::string#inspect()","sassc::script::value::number#int?()","sassc::util#ironruby?()","sassc::script::value::number#is_unit?()","sassc::util#jruby?()","sassc::util#jruby_version()","sassc::util::normalizedmap#keys()","sassc::script::value::number#legal_units?()","sassc::engine#line_comments?()","sassc::load_paths()","sassc::engine#load_paths()","sassc::native::make_data_context()","sassc::util::normalizedmap#map()","sassc::util#map_keys()","sassc::util::normalizedmap#method_missing()","sassc::native::native_string()","sassc::dependency::new()","sassc::engine::new()","sassc::functionshandler::new()","sassc::importhandler::new()","sassc::importer::new()","sassc::importer::import::new()","sassc::script::value::new()","sassc::script::value::bool::new()","sassc::script::value::color::new()","sassc::script::value::list::new()","sassc::script::value::map::new()","sassc::script::value::number::new()","sassc::script::value::string::new()","sassc::script::valueconversion::base::new()","sassc::syntaxerror::new()","sassc::util::normalizedmap::new()","sassc::util::normalizedmap#normalize()","sassc::script::value::number#normalize!()","sassc::script::value#null?()","sassc::engine#omit_source_map_url?()","sassc::script::value::number#operate()","sassc::script::value#options()","sassc::script::value::list#options=()","sassc::script::value::map#options=()","sassc::engine#output_style()","sassc::engine#output_style_enum()","sassc::util#paths()","sassc::script::value::string#plus()","sassc::engine#precision()","sassc::script::value::number::precision()","sassc::script::value::number::precision=()","sassc::script::value::number::precision_factor()","sassc::engine#quiet?()","sassc::script::value::string::quote()","sassc::util#rails_env()","sassc::util#rails_root()","sassc::util#rbx?()","sassc::util#relative_path_from()","sassc::engine#render()","sassc::util::normalizedmap#respond_to_missing?()","sassc::native::return_string_array()","sassc::script::value::color#rgba?()","sassc::script::value::number::round()","sassc::util#round()","sassc::script::value::number#sans_common_units()","sassc::engine#sass?()","sassc::syntaxerror#sass_backtrace()","sassc::util#sass_warn()","sassc::script::value::list#sep_str()","sassc::script::value#separator()","sassc::script::value::map#separator()","sassc::functionshandler#setup()","sassc::importhandler#setup()","sassc::util#silence_sass_warnings()","sassc::util::normalizedmap#size()","sassc::util::normalizedmap#sort_by()","sassc::engine#source_map()","sassc::engine#source_map_contents?()","sassc::engine#source_map_embed?()","sassc::engine#source_map_file()","sassc::native::string_get_type()","sassc::script::value#to_a()","sassc::script::value::map#to_a()","sassc::util::normalizedmap#to_a()","sassc::script::value#to_bool()","sassc::script::value#to_h()","sassc::script::value::list#to_h()","sassc::util::normalizedmap#to_hash()","sassc::script::value#to_i()","sassc::script::value::number#to_i()","sassc::script::valueconversion::to_native()","sassc::script::valueconversion::bool#to_native()","sassc::script::valueconversion::color#to_native()","sassc::script::valueconversion::list#to_native()","sassc::script::valueconversion::map#to_native()","sassc::script::valueconversion::number#to_native()","sassc::script::valueconversion::string#to_native()","sassc::functionshandler#to_native_value()","sassc::importer::import#to_s()","sassc::script::value#to_s()","sassc::script::value::bool#to_s()","sassc::script::value::color#to_s()","sassc::script::value::list#to_s()","sassc::script::value::map#to_s()","sassc::script::value::number#to_s()","sassc::script::value::string#to_s()","sassc::script::value#to_sass()","sassc::script::value::bool#to_sass()","sassc::script::value::list#to_sass()","sassc::script::value::map#to_sass()","sassc::script::value::number#to_sass()","sassc::script::value::string#to_sass()","sassc::script::value::number#unit_str()","sassc::script::value::number#unitless?()","sassc::util::normalizedmap#update()","sassc::script::value::color#value()","sassc::util::normalizedmap#values()","sassc::util#windows?()","sassc::script::value#with_contents()"],"info":[["SassC","","SassC.html","",""],["SassC::BaseError","","SassC/BaseError.html","",""],["SassC::Dependency","","SassC/Dependency.html","",""],["SassC::Engine","","SassC/Engine.html","",""],["SassC::FunctionsHandler","","SassC/FunctionsHandler.html","",""],["SassC::ImportHandler","","SassC/ImportHandler.html","",""],["SassC::Importer","","SassC/Importer.html","",""],["SassC::Importer::Import","","SassC/Importer/Import.html","",""],["SassC::InvalidStyleError","","SassC/InvalidStyleError.html","",""],["SassC::Native","","SassC/Native.html","",""],["SassC::Native::SassBoolean","","SassC/Native/SassBoolean.html","",""],["SassC::Native::SassColor","","SassC/Native/SassColor.html","",""],["SassC::Native::SassError","","SassC/Native/SassError.html","",""],["SassC::Native::SassList","","SassC/Native/SassList.html","",""],["SassC::Native::SassMap","","SassC/Native/SassMap.html","",""],["SassC::Native::SassMapPair","","SassC/Native/SassMapPair.html","",""],["SassC::Native::SassNull","","SassC/Native/SassNull.html","",""],["SassC::Native::SassNumber","","SassC/Native/SassNumber.html","",""],["SassC::Native::SassString","","SassC/Native/SassString.html","",""],["SassC::Native::SassUnknown","","SassC/Native/SassUnknown.html","",""],["SassC::Native::SassValue","","SassC/Native/SassValue.html","",""],["SassC::Native::SassWarning","","SassC/Native/SassWarning.html","",""],["SassC::Native::StringList","","SassC/Native/StringList.html","",""],["SassC::NotRenderedError","","SassC/NotRenderedError.html","",""],["SassC::Sass2Scss","","SassC/Sass2Scss.html","",""],["SassC::Script","","SassC/Script.html","",""],["SassC::Script::Functions","","SassC/Script/Functions.html","",""],["SassC::Script::Value","","SassC/Script/Value.html","","<p>The abstract superclass for SassScript objects. Many of these methods, especially the ones that correspond …\n"],["SassC::Script::Value::Bool","","SassC/Script/Value/Bool.html","","<p>A SassScript object representing a boolean (true or false) value.\n"],["SassC::Script::Value::Color","","SassC/Script/Value/Color.html","","<p>A SassScript object representing a CSS color. This class provides a very bare-bones system for storing …\n"],["SassC::Script::Value::List","","SassC/Script/Value/List.html","","<p>A SassScript object representing a CSS list. This includes both comma-separated lists and space-separated …\n"],["SassC::Script::Value::Map","","SassC/Script/Value/Map.html","",""],["SassC::Script::Value::Number","","SassC/Script/Value/Number.html","","<p>A SassScript object representing a number. SassScript numbers can have decimal values, and can also have …\n"],["SassC::Script::Value::String","","SassC/Script/Value/String.html","",""],["SassC::Script::ValueConversion","","SassC/Script/ValueConversion.html","",""],["SassC::Script::ValueConversion::Base","","SassC/Script/ValueConversion/Base.html","",""],["SassC::Script::ValueConversion::Bool","","SassC/Script/ValueConversion/Bool.html","",""],["SassC::Script::ValueConversion::Color","","SassC/Script/ValueConversion/Color.html","",""],["SassC::Script::ValueConversion::List","","SassC/Script/ValueConversion/List.html","",""],["SassC::Script::ValueConversion::Map","","SassC/Script/ValueConversion/Map.html","",""],["SassC::Script::ValueConversion::Number","","SassC/Script/ValueConversion/Number.html","",""],["SassC::Script::ValueConversion::String","","SassC/Script/ValueConversion/String.html","",""],["SassC::SyntaxError","","SassC/SyntaxError.html","","<p>When dealing with SyntaxErrors, it&#39;s important to provide filename and line number information.  …\n"],["SassC::UnsupportedValue","","SassC/UnsupportedValue.html","",""],["SassC::Util","","SassC/Util.html","","<p>A module containing various useful functions.\n"],["SassC::Util::NormalizedMap","","SassC/Util/NormalizedMap.html","","<p>A hash that normalizes its string keys while still allowing you to get back to the original keys that …\n"],["==","SassC::Script::Value","SassC/Script/Value.html#method-i-3D-3D","(other)","<p>Compares this object to `other`\n"],["==","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-3D-3D","(other_color)",""],["[]","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-5B-5D","(k)","<p>@private\n"],["[]=","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-5B-5D-3D","(k, v)","<p>@private\n"],["_perform","SassC::Script::Value","SassC/Script/Value.html#method-i-_perform","(environment)","<p>Evaluates the value.\n<p>@param environment [Sass::Environment] The environment in which to evaluate the  …\n"],["abstract","SassC::Util","SassC/Util.html#method-i-abstract","(obj)","<p>Throws a NotImplementedError for an abstract method.\n<p>@param obj [Object] `self` @raise [NotImplementedError] …\n"],["alpha_string","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-alpha_string","()","<p>Returns the alpha value of this color as a string and rounded to 8 decimal places.\n"],["arguments_from_native_list","SassC::FunctionsHandler","SassC/FunctionsHandler.html#method-i-arguments_from_native_list","(native_argument_list)",""],["as_stored","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-as_stored","()","<p>@return [Hash] Hash with the keys as they were stored (before normalization).\n"],["assert_int!","SassC::Script::Value","SassC/Script/Value.html#method-i-assert_int-21","()","<p>@raise [SassC::SyntaxError] if this value isn&#39;t an integer\n"],["assert_valid_index","SassC::Script::Value::List","SassC/Script/Value/List.html#method-c-assert_valid_index","(list, n)","<p>Asserts an index is within the list.\n<p>@private\n<p>@param list [Sass::Script::Value::List] The list for which …\n"],["attach_function","SassC::Native","SassC/Native.html#method-c-attach_function","(*args)","<p>Remove the redundant “sass_” from the beginning of every method name\n"],["backtrace","SassC::SyntaxError","SassC/SyntaxError.html#method-i-backtrace","()",""],["basically_equal?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-basically_equal-3F","(num1, num2)","<p>@private @see Sass::Script::Number.basically_equal?\n"],["basically_equal?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-basically_equal-3F","(num1, num2)","<p>Checks whether two numbers are within an epsilon of each other. @return [Boolean]\n"],["bracketed","SassC::Script::Value","SassC/Script/Value.html#method-i-bracketed","()","<p>Whether the value is surrounded by square brackets. For non-list values, this will be `false`.\n"],["caller_info","SassC::Util","SassC/Util.html#method-i-caller_info","(entry = nil)","<p>Returns information about the caller of the previous method.\n<p>@param entry [String] An entry in the `#caller` …\n"],["clamp","SassC::Util","SassC/Util.html#method-i-clamp","(value, min, max)","<p>Restricts the numeric `value` to be within `min` and `max`, inclusive. If the value is lower than `min` …\n"],["coerce","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-coerce","(num_units, den_units)","<p>Returns this number converted to other units. The conversion takes into account the relationship between …\n"],["coercion_factor","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-coercion_factor","(from_units, to_units)",""],["comparable_to?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-comparable_to-3F","(other)","<p>@param other [Number] A number to decide if it can be compared with this number. @return [Boolean] Whether …\n"],["compute_units","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-compute_units","(this, other, operation)",""],["context_get_included_files","SassC::Native","SassC/Native.html#method-c-context_get_included_files","(*args)",""],["conversion_factor","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-conversion_factor","(from_unit, to_unit)",""],["convert","SassC::Sass2Scss","SassC/Sass2Scss.html#method-c-convert","(sass)",""],["convertable?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-convertable-3F","(units)",""],["custom_functions","SassC::Script","SassC/Script.html#method-c-custom_functions","(functions: Functions)",""],["delete","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-delete","(k)","<p>@private\n"],["denormalize","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-denormalize","(key)","<p>Returns the version of `key` as it was stored before normalization. If `key` isn&#39;t in the map, returns …\n"],["dependencies","SassC::Engine","SassC/Engine.html#method-i-dependencies","()",""],["deprecated","SassC::Util","SassC/Util.html#method-i-deprecated","(obj, message = nil)","<p>Prints a deprecation warning for the caller method.\n<p>@param obj [Object] `self` @param message [String] …\n"],["dup","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-dup","()",""],["each","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-each","()",""],["element_needs_parens?","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-element_needs_parens-3F","(element)",""],["empty?","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-empty-3F","()",""],["epsilon","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-epsilon","()","<p>Used in checking equality of floating point numbers. Any numbers within an `epsilon` of each other are …\n"],["eq","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-eq","(other)","<p>@see Value#eq\n"],["eq","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-eq","(other)","<p>@see Value#eq\n"],["eql?","SassC::Script::Value","SassC/Script/Value.html#method-i-eql-3F","(other)","<p>True if this Value is the same as `other`\n"],["eql?","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-eql-3F","(other_color)","<p>True if this Color is equal to `other_color`\n"],["eql?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-eql-3F","(other)","<p>Hash-equality works differently than `==` equality for numbers. Hash-equality must be transitive, so …\n"],["error","SassC::FunctionsHandler","SassC/FunctionsHandler.html#method-i-error","(message)",""],["filename","SassC::Engine","SassC/Engine.html#method-i-filename","()",""],["formatted_function_name","SassC::Script","SassC/Script.html#method-c-formatted_function_name","(function_name, functions: Functions)",""],["from_filenames","SassC::Dependency","SassC/Dependency.html#method-c-from_filenames","(filenames)",""],["from_native","SassC::Script::ValueConversion","SassC/Script/ValueConversion.html#method-c-from_native","(native_value, options)",""],["functions_handler","SassC::Engine","SassC/Engine.html#method-i-functions_handler","()",""],["has_key?","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-has_key-3F","(k)","<p>@private\n"],["hash","SassC::Script::Value","SassC/Script/Value.html#method-i-hash","()","<p>Returns the hash code of this value. Two objects&#39; hash codes should be equal if the objects are equal. …\n"],["hash","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-hash","()","<p>Returns a numeric value for comparing two Color objects This method is used internally by the Hash class …\n"],["hash","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-hash","()",""],["hash","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-hash","()",""],["hash","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-hash","()",""],["hlsa?","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-hlsa-3F","()","<p>True if this color has HSLA values\n"],["import_function","SassC::ImportHandler","SassC/ImportHandler.html#method-i-import_function","()",""],["import_handler","SassC::Engine","SassC/Engine.html#method-i-import_handler","()",""],["imports","SassC::Importer","SassC/Importer.html#method-i-imports","(path, parent_path)",""],["imports_to_native","SassC::ImportHandler","SassC/ImportHandler.html#method-i-imports_to_native","(imports)",""],["inspect","SassC::Script::Value","SassC/Script/Value.html#method-i-inspect","()","<p>Returns a system inspect value for this object\n"],["inspect","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-inspect","()","<p>@see Value#inspect\n"],["inspect","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-inspect","(opts = {})",""],["inspect","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-inspect","(opts = {})","<p>Returns a readable representation of this number.\n<p>This representation is valid CSS (and valid SassScript …\n"],["inspect","SassC::Script::Value::String","SassC/Script/Value/String.html#method-i-inspect","()",""],["int?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-int-3F","()","<p>@return [Boolean] Whether or not this number is an integer.\n"],["ironruby?","SassC::Util","SassC/Util.html#method-i-ironruby-3F","()","<p>Whether or not this is running on IronRuby.\n<p>@return [Boolean]\n"],["is_unit?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-is_unit-3F","(unit)","<p>Checks whether the number has the numerator unit specified.\n<p>@example\n\n<pre>number = Sass::Script::Value::Number.new(10, ...</pre>\n"],["jruby?","SassC::Util","SassC/Util.html#method-i-jruby-3F","()","<p>Whether or not this is running on JRuby.\n<p>@return [Boolean]\n"],["jruby_version","SassC::Util","SassC/Util.html#method-i-jruby_version","()","<p>Returns an array of ints representing the JRuby version number.\n<p>@return [Array&lt;Integer&gt;]\n"],["keys","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-keys","()",""],["legal_units?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-legal_units-3F","()","<p>@return [Boolean] Whether or not this number has units that can be represented in CSS\n\n<pre>(that is, zero or ...</pre>\n"],["line_comments?","SassC::Engine","SassC/Engine.html#method-i-line_comments-3F","()",""],["load_paths","SassC","SassC.html#method-c-load_paths","()","<p>The global load paths for Sass files. This is meant for plugins and libraries to register the paths to …\n"],["load_paths","SassC::Engine","SassC/Engine.html#method-i-load_paths","()",""],["make_data_context","SassC::Native","SassC/Native.html#method-c-make_data_context","(data)",""],["map","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-map","()",""],["map_keys","SassC::Util","SassC/Util.html#method-i-map_keys","(hash)","<p>Maps the keys in a hash according to a block. @example\n\n<pre>map_keys({:foo =&gt; &quot;bar&quot;, :baz =&gt; &quot;bang&quot;}) {|k| ...</pre>\n"],["method_missing","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-method_missing","(method, *args, &block)",""],["native_string","SassC::Native","SassC/Native.html#method-c-native_string","(string)",""],["new","SassC::Dependency","SassC/Dependency.html#method-c-new","(filename)",""],["new","SassC::Engine","SassC/Engine.html#method-c-new","(template, options = {})",""],["new","SassC::FunctionsHandler","SassC/FunctionsHandler.html#method-c-new","(options)",""],["new","SassC::ImportHandler","SassC/ImportHandler.html#method-c-new","(options)",""],["new","SassC::Importer","SassC/Importer.html#method-c-new","(options)",""],["new","SassC::Importer::Import","SassC/Importer/Import.html#method-c-new","(path, source: nil, source_map_path: nil)",""],["new","SassC::Script::Value","SassC/Script/Value.html#method-c-new","(value = nil)","<p>Creates a new value.\n"],["new","SassC::Script::Value::Bool","SassC/Script/Value/Bool.html#method-c-new","(value)","<p>We override object creation so that users of the core API will not need to know that booleans are specific …\n"],["new","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-c-new","(red:nil, green:nil, blue:nil, hue:nil, saturation:nil, lightness:nil, alpha:1.0)","<p>Creates a new color with (`red`, `green`, `blue`) or (`hue`, `saturation`, `lightness` values, plus an …\n"],["new","SassC::Script::Value::List","SassC/Script/Value/List.html#method-c-new","(value, separator: nil, bracketed: false)","<p>Creates a new list.\n<p>@param value [Array&lt;Value&gt;] See {#value} @param separator [Symbol] See {#separator} …\n"],["new","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-c-new","(hash)","<p>Creates a new map.\n<p>@param hash [Hash&lt;Node, Node&gt;]\n"],["new","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-new","(value, numerator_units = NO_UNITS, denominator_units = NO_UNITS)","<p>@param value [Numeric] The value of the number @param numerator_units [::String, Array&lt;::String&gt;] …\n"],["new","SassC::Script::Value::String","SassC/Script/Value/String.html#method-c-new","(value, type = :identifier)","<p>Creates a new string.\n<p>@param value [String] See {#value} @param type [Symbol] See {#type} @param deprecated_interp_equivalent …\n"],["new","SassC::Script::ValueConversion::Base","SassC/Script/ValueConversion/Base.html#method-c-new","(value)",""],["new","SassC::SyntaxError","SassC/SyntaxError.html#method-c-new","(message, filename: nil, line: nil)",""],["new","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-c-new","(map = nil)","<p>Create a normalized map\n"],["normalize","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-normalize","(key)","<p>Specifies how to transform the key. This can be overridden to create other normalization behaviors.\n"],["normalize!","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-normalize-21","()",""],["null?","SassC::Script::Value","SassC/Script/Value.html#method-i-null-3F","()","<p>Returns `false` (all Values are truthy)\n"],["omit_source_map_url?","SassC::Engine","SassC/Engine.html#method-i-omit_source_map_url-3F","()",""],["operate","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-operate","(other, operation)",""],["options","SassC::Script::Value","SassC/Script/Value.html#method-i-options","()","<p>Returns the options hash for this node. Raises SassC::SyntaxError if the value was created outside of …\n"],["options=","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-options-3D","(options)","<p>@see Value#options=\n"],["options=","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-options-3D","(options)","<p>@see Value#options=\n"],["output_style","SassC::Engine","SassC/Engine.html#method-i-output_style","()",""],["output_style_enum","SassC::Engine","SassC/Engine.html#method-i-output_style_enum","()",""],["paths","SassC::Util","SassC/Util.html#method-i-paths","(arrs)","<p>Return an array of all possible paths through the given arrays.\n<p>@param arrs [Array&lt;Array&gt;] @return …\n"],["plus","SassC::Script::Value::String","SassC/Script/Value/String.html#method-i-plus","(other)","<p>@see Value#plus\n"],["precision","SassC::Engine","SassC/Engine.html#method-i-precision","()",""],["precision","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-precision","()",""],["precision=","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-precision-3D","(digits)","<p>Sets the number of digits of precision For example, if this is `3`, `3.1415926` will be printed as `3.142`. …\n"],["precision_factor","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-precision_factor","()","<p>the precision factor used in numeric output it is derived from the `precision` method.\n"],["quiet?","SassC::Engine","SassC/Engine.html#method-i-quiet-3F","()",""],["quote","SassC::Script::Value::String","SassC/Script/Value/String.html#method-c-quote","(contents, opts = {})","<p>Returns the quoted string representation of `contents`.\n<p>@options opts :quote [String]\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">The</span> <span class=\"ruby-identifier\">preferred</span> <span class=\"ruby-identifier\">quote</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["rails_env","SassC::Util","SassC/Util.html#method-i-rails_env","()","<p>Returns the environment of the Rails application, if this is running in a Rails context. Returns `nil` …\n"],["rails_root","SassC::Util","SassC/Util.html#method-i-rails_root","()","<p>Returns the root of the Rails application, if this is running in a Rails context. Returns `nil` if no …\n"],["rbx?","SassC::Util","SassC/Util.html#method-i-rbx-3F","()","<p>Whether or not this is running on Rubinius.\n<p>@return [Boolean]\n"],["relative_path_from","SassC::Util","SassC/Util.html#method-i-relative_path_from","(path, from)","<p>Returns `path` relative to `from`.\n<p>This is like `Pathname#relative_path_from` except it accepts both strings …\n"],["render","SassC::Engine","SassC/Engine.html#method-i-render","()",""],["respond_to_missing?","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-respond_to_missing-3F","(method, include_private = false)",""],["return_string_array","SassC::Native","SassC/Native.html#method-c-return_string_array","(ptr)","<p>github.com/ffi/ffi/wiki/Examples#array-of-strings\n"],["rgba?","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-rgba-3F","()","<p>True if this color has RGBA values\n"],["round","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-c-round","(num)","<p>@private\n"],["round","SassC::Util","SassC/Util.html#method-i-round","(value)","<p>Like [Fixnum.round], but leaves rooms for slight floating-point differences.\n<p>@param value [Numeric] @return …\n"],["sans_common_units","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-sans_common_units","(units1, units2)",""],["sass?","SassC::Engine","SassC/Engine.html#method-i-sass-3F","()",""],["sass_backtrace","SassC::SyntaxError","SassC/SyntaxError.html#method-i-sass_backtrace","()","<p>The backtrace of the error within Sass files.\n"],["sass_warn","SassC::Util","SassC/Util.html#method-i-sass_warn","(msg)","<p>The same as `Kernel#warn`, but is silenced by {#silence_sass_warnings}.\n<p>@param msg [String]\n"],["sep_str","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-sep_str","(opts = options)",""],["separator","SassC::Script::Value","SassC/Script/Value.html#method-i-separator","()","<p>Returns the separator for this value. For non-list-like values or the empty list, this will be `nil`. …\n"],["separator","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-separator","()","<p>@see Value#separator\n"],["setup","SassC::FunctionsHandler","SassC/FunctionsHandler.html#method-i-setup","(native_options, functions: Script::Functions)",""],["setup","SassC::ImportHandler","SassC/ImportHandler.html#method-i-setup","(native_options)",""],["silence_sass_warnings","SassC::Util","SassC/Util.html#method-i-silence_sass_warnings","()","<p>Silences all Sass warnings within a block.\n<p>@yield A block in which no Sass warnings will be printed\n"],["size","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-size","()",""],["sort_by","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-sort_by","()",""],["source_map","SassC::Engine","SassC/Engine.html#method-i-source_map","()",""],["source_map_contents?","SassC::Engine","SassC/Engine.html#method-i-source_map_contents-3F","()",""],["source_map_embed?","SassC::Engine","SassC/Engine.html#method-i-source_map_embed-3F","()",""],["source_map_file","SassC::Engine","SassC/Engine.html#method-i-source_map_file","()",""],["string_get_type","SassC::Native","SassC/Native.html#method-c-string_get_type","(native_value)",""],["to_a","SassC::Script::Value","SassC/Script/Value.html#method-i-to_a","()","<p>Returns the value of this Value as an array. Single Values are considered the same as single-element …\n"],["to_a","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-to_a","()","<p>@see Value#to_a\n"],["to_a","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-to_a","()",""],["to_bool","SassC::Script::Value","SassC/Script/Value.html#method-i-to_bool","()","<p>Returns `true` (all Values are truthy)\n"],["to_h","SassC::Script::Value","SassC/Script/Value.html#method-i-to_h","()","<p>Returns the value of this value as a hash. Most values don&#39;t have hash representations, but [Map]s …\n"],["to_h","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-to_h","()","<p>@see Value#to_h\n"],["to_hash","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-to_hash","()",""],["to_i","SassC::Script::Value","SassC/Script/Value.html#method-i-to_i","()","<p>Returns the integer value of this value. Raises SassC::SyntaxError if this value doesn’t implment integer …\n"],["to_i","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-to_i","()","<p>@return [Integer] The integer value of the number @raise [Sass::SyntaxError] if the number isn&#39;t …\n"],["to_native","SassC::Script::ValueConversion","SassC/Script/ValueConversion.html#method-c-to_native","(value)",""],["to_native","SassC::Script::ValueConversion::Bool","SassC/Script/ValueConversion/Bool.html#method-i-to_native","()",""],["to_native","SassC::Script::ValueConversion::Color","SassC/Script/ValueConversion/Color.html#method-i-to_native","()",""],["to_native","SassC::Script::ValueConversion::List","SassC/Script/ValueConversion/List.html#method-i-to_native","()",""],["to_native","SassC::Script::ValueConversion::Map","SassC/Script/ValueConversion/Map.html#method-i-to_native","()",""],["to_native","SassC::Script::ValueConversion::Number","SassC/Script/ValueConversion/Number.html#method-i-to_native","()",""],["to_native","SassC::Script::ValueConversion::String","SassC/Script/ValueConversion/String.html#method-i-to_native","(opts = {})",""],["to_native_value","SassC::FunctionsHandler","SassC/FunctionsHandler.html#method-i-to_native_value","(sass_value)",""],["to_s","SassC::Importer::Import","SassC/Importer/Import.html#method-i-to_s","()",""],["to_s","SassC::Script::Value","SassC/Script/Value.html#method-i-to_s","(opts = {})","<p>Returns the string representation of this value as it would be output to the CSS document.\n<p>@options opts …\n"],["to_s","SassC::Script::Value::Bool","SassC/Script/Value/Bool.html#method-i-to_s","(opts = {})","<p>Returns the string “true” or “false” for this value\n"],["to_s","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-to_s","()","<p>Returns a CSS color declaration in the form `rgb(…)`, `rgba(…)`, `hsl(…)`, or `hsla(…)`.\n"],["to_s","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-to_s","(opts = {})","<p>@see Value#to_s\n"],["to_s","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-to_s","(opts = {})","<p>@see Value#to_s\n"],["to_s","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-to_s","(opts = {})","<p>@return [String] The CSS representation of this number @raise [Sass::SyntaxError] if this number has …\n"],["to_s","SassC::Script::Value::String","SassC/Script/Value/String.html#method-i-to_s","(opts = {})","<p>@see Value#to_s\n"],["to_sass","SassC::Script::Value","SassC/Script/Value.html#method-i-to_sass","(opts = {})",""],["to_sass","SassC::Script::Value::Bool","SassC/Script/Value/Bool.html#method-i-to_sass","(opts = {})",""],["to_sass","SassC::Script::Value::List","SassC/Script/Value/List.html#method-i-to_sass","(opts = {})","<p>@see Value#to_sass\n"],["to_sass","SassC::Script::Value::Map","SassC/Script/Value/Map.html#method-i-to_sass","(opts = {})",""],["to_sass","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-to_sass","(opts = {})",""],["to_sass","SassC::Script::Value::String","SassC/Script/Value/String.html#method-i-to_sass","(opts = {})","<p>@see Value#to_sass\n"],["unit_str","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-unit_str","()","<p>Returns a human readable representation of the units in this number. For complex units this takes the …\n"],["unitless?","SassC::Script::Value::Number","SassC/Script/Value/Number.html#method-i-unitless-3F","()","<p>@return [Boolean] Whether or not this number has no units.\n"],["update","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-update","(map)",""],["value","SassC::Script::Value::Color","SassC/Script/Value/Color.html#method-i-value","()","<p>Returns the values of this color in an array. Provided for compatibility between different SassC::Script::Value …\n"],["values","SassC::Util::NormalizedMap","SassC/Util/NormalizedMap.html#method-i-values","()",""],["windows?","SassC::Util","SassC/Util.html#method-i-windows-3F","()","<p>Whether or not this is running on Windows.\n<p>@return [Boolean]\n"],["with_contents","SassC::Script::Value","SassC/Script/Value.html#method-i-with_contents","(contents, separator: self.separator, bracketed: self.bracketed)","<p>Creates a new list containing `contents` but with the same brackets and separators as this object, when …\n"]]}}