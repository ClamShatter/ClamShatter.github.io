var search_data = {"index":{"searchIndex":["execjs","disabledruntime","duktaperuntime","context","encoding","error","externalruntime","context","miniracerruntime","context","programerror","rubyrhinoruntime","context","runtime","context","runtimeerror","runtimeunavailable","runtimes","autodetect()","available?()","available?()","available?()","available?()","available?()","available?()","best_available()","binary()","call()","call()","call()","call()","call()","compile()","compile()","compile()","context_class()","create_tempfile()","cygwin?()","deprecated?()","deprecated?()","deprecated?()","encode()","encode_source()","encode_unicode_codepoints()","eval()","eval()","eval()","eval()","eval()","eval()","eval()","eval()","exec()","exec()","exec()","exec()","exec()","exec()","exec()","exec()","exec_runtime()","exec_runtime_error()","extract_result()","fix_memory_limit!()","from_environment()","generate_compile_method()","json2_source()","locate_executable()","name()","name()","name()","name()","name()","names()","new()","new()","new()","new()","new()","new()","root()","runtime=()","runtimes()","runtimes()","shell_escape()","strip_functions!()","translate()","unbox()","which()","windows?()","wrap_error()","wrap_error()","write_to_tempfile()","jsc_runner.js","jscript_runner.js","json2.js","node_runner.js","spidermonkey_runner.js","v8_runner.js"],"longSearchIndex":["execjs","execjs::disabledruntime","execjs::duktaperuntime","execjs::duktaperuntime::context","execjs::encoding","execjs::error","execjs::externalruntime","execjs::externalruntime::context","execjs::miniracerruntime","execjs::miniracerruntime::context","execjs::programerror","execjs::rubyrhinoruntime","execjs::rubyrhinoruntime::context","execjs::runtime","execjs::runtime::context","execjs::runtimeerror","execjs::runtimeunavailable","execjs::runtimes","execjs::runtimes::autodetect()","execjs::disabledruntime#available?()","execjs::duktaperuntime#available?()","execjs::externalruntime#available?()","execjs::miniracerruntime#available?()","execjs::rubyrhinoruntime#available?()","execjs::runtime#available?()","execjs::runtimes::best_available()","execjs::externalruntime#binary()","execjs::duktaperuntime::context#call()","execjs::externalruntime::context#call()","execjs::miniracerruntime::context#call()","execjs::rubyrhinoruntime::context#call()","execjs::runtime::context#call()","execjs::compile()","execjs::disabledruntime#compile()","execjs::runtime#compile()","execjs::runtime#context_class()","execjs::externalruntime::context#create_tempfile()","execjs::cygwin?()","execjs::disabledruntime#deprecated?()","execjs::externalruntime#deprecated?()","execjs::runtime#deprecated?()","execjs::encoding#encode()","execjs::externalruntime#encode_source()","execjs::externalruntime#encode_unicode_codepoints()","execjs::eval()","execjs::disabledruntime#eval()","execjs::duktaperuntime::context#eval()","execjs::externalruntime::context#eval()","execjs::miniracerruntime::context#eval()","execjs::rubyrhinoruntime::context#eval()","execjs::runtime#eval()","execjs::runtime::context#eval()","execjs::exec()","execjs::disabledruntime#exec()","execjs::duktaperuntime::context#exec()","execjs::externalruntime::context#exec()","execjs::miniracerruntime::context#exec()","execjs::rubyrhinoruntime::context#exec()","execjs::runtime#exec()","execjs::runtime::context#exec()","execjs::externalruntime#exec_runtime()","execjs::externalruntime#exec_runtime_error()","execjs::externalruntime::context#extract_result()","execjs::rubyrhinoruntime::context#fix_memory_limit!()","execjs::runtimes::from_environment()","execjs::externalruntime#generate_compile_method()","execjs::externalruntime#json2_source()","execjs::externalruntime#locate_executable()","execjs::disabledruntime#name()","execjs::duktaperuntime#name()","execjs::miniracerruntime#name()","execjs::rubyrhinoruntime#name()","execjs::runtime#name()","execjs::runtimes::names()","execjs::duktaperuntime::context::new()","execjs::externalruntime::new()","execjs::externalruntime::context::new()","execjs::miniracerruntime::context::new()","execjs::rubyrhinoruntime::context::new()","execjs::runtime::context::new()","execjs::root()","execjs::runtime=()","execjs::runtimes()","execjs::runtimes::runtimes()","execjs::externalruntime#shell_escape()","execjs::miniracerruntime::context#strip_functions!()","execjs::miniracerruntime::context#translate()","execjs::rubyrhinoruntime::context#unbox()","execjs::externalruntime#which()","execjs::windows?()","execjs::duktaperuntime::context#wrap_error()","execjs::rubyrhinoruntime::context#wrap_error()","execjs::externalruntime::context#write_to_tempfile()","","","","","",""],"info":[["ExecJS","","ExecJS.html","",""],["ExecJS::DisabledRuntime","","ExecJS/DisabledRuntime.html","",""],["ExecJS::DuktapeRuntime","","ExecJS/DuktapeRuntime.html","",""],["ExecJS::DuktapeRuntime::Context","","ExecJS/DuktapeRuntime/Context.html","",""],["ExecJS::Encoding","","ExecJS/Encoding.html","","<p>Encodes strings as UTF-8\n"],["ExecJS::Error","","ExecJS/Error.html","",""],["ExecJS::ExternalRuntime","","ExecJS/ExternalRuntime.html","",""],["ExecJS::ExternalRuntime::Context","","ExecJS/ExternalRuntime/Context.html","",""],["ExecJS::MiniRacerRuntime","","ExecJS/MiniRacerRuntime.html","",""],["ExecJS::MiniRacerRuntime::Context","","ExecJS/MiniRacerRuntime/Context.html","",""],["ExecJS::ProgramError","","ExecJS/ProgramError.html","",""],["ExecJS::RubyRhinoRuntime","","ExecJS/RubyRhinoRuntime.html","",""],["ExecJS::RubyRhinoRuntime::Context","","ExecJS/RubyRhinoRuntime/Context.html","",""],["ExecJS::Runtime","","ExecJS/Runtime.html","","<p>Abstract base class for runtimes\n"],["ExecJS::Runtime::Context","","ExecJS/Runtime/Context.html","",""],["ExecJS::RuntimeError","","ExecJS/RuntimeError.html","",""],["ExecJS::RuntimeUnavailable","","ExecJS/RuntimeUnavailable.html","",""],["ExecJS::Runtimes","","ExecJS/Runtimes.html","",""],["autodetect","ExecJS::Runtimes","ExecJS/Runtimes.html#method-c-autodetect","()",""],["available?","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-available-3F","()",""],["available?","ExecJS::DuktapeRuntime","ExecJS/DuktapeRuntime.html#method-i-available-3F","()",""],["available?","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-available-3F","()",""],["available?","ExecJS::MiniRacerRuntime","ExecJS/MiniRacerRuntime.html#method-i-available-3F","()",""],["available?","ExecJS::RubyRhinoRuntime","ExecJS/RubyRhinoRuntime.html#method-i-available-3F","()",""],["available?","ExecJS::Runtime","ExecJS/Runtime.html#method-i-available-3F","()",""],["best_available","ExecJS::Runtimes","ExecJS/Runtimes.html#method-c-best_available","()",""],["binary","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-binary","()",""],["call","ExecJS::DuktapeRuntime::Context","ExecJS/DuktapeRuntime/Context.html#method-i-call","(identifier, *args)",""],["call","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-call","(identifier, *args)",""],["call","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-i-call","(identifier, *args)",""],["call","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-call","(properties, *args)",""],["call","ExecJS::Runtime::Context","ExecJS/Runtime/Context.html#method-i-call","(source, *args)","<p>Evaluates <code>source</code> as an expression (which should be of type <code>function</code>), and calls the function with the …\n"],["compile","ExecJS","ExecJS.html#method-c-compile","(source, options = {})",""],["compile","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-compile","(source, options = {})",""],["compile","ExecJS::Runtime","ExecJS/Runtime.html#method-i-compile","(source, options = {})",""],["context_class","ExecJS::Runtime","ExecJS/Runtime.html#method-i-context_class","()",""],["create_tempfile","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-create_tempfile","(basename)","<p>See Tempfile.create on Ruby 2.1\n"],["cygwin?","ExecJS","ExecJS.html#method-c-cygwin-3F","()",""],["deprecated?","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-deprecated-3F","()",""],["deprecated?","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-deprecated-3F","()",""],["deprecated?","ExecJS::Runtime","ExecJS/Runtime.html#method-i-deprecated-3F","()",""],["encode","ExecJS::Encoding","ExecJS/Encoding.html#method-i-encode","(string)","<p>workaround for jruby bug jira.codehaus.org/browse/JRUBY-6588 workaround for rbx bug github.com/rubinius/rubinius/issues/1729 …\n"],["encode_source","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-encode_source","(source)",""],["encode_unicode_codepoints","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-encode_unicode_codepoints","(str)",""],["eval","ExecJS","ExecJS.html#method-c-eval","(source, options = {})",""],["eval","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::DuktapeRuntime::Context","ExecJS/DuktapeRuntime/Context.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::Runtime","ExecJS/Runtime.html#method-i-eval","(source, options = {})",""],["eval","ExecJS::Runtime::Context","ExecJS/Runtime/Context.html#method-i-eval","(source, options = {})","<p>Evaluates the <code>source</code> as an expression and returns the result.\n\n<pre>context.eval(&quot;1&quot;)        # =&gt; 1\ncontext.eval(&quot;return ...</pre>\n"],["exec","ExecJS","ExecJS.html#method-c-exec","(source, options = {})",""],["exec","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::DuktapeRuntime::Context","ExecJS/DuktapeRuntime/Context.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::Runtime","ExecJS/Runtime.html#method-i-exec","(source, options = {})",""],["exec","ExecJS::Runtime::Context","ExecJS/Runtime/Context.html#method-i-exec","(source, options = {})","<p>Evaluates the <code>source</code> in the context of a function body and returns the returned value.\n\n<pre>context.exec(&quot;return ...</pre>\n"],["exec_runtime","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-exec_runtime","(filename)",""],["exec_runtime_error","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-exec_runtime_error","(output)","<p>Internally exposed for Context.\n"],["extract_result","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-extract_result","(output, filename)",""],["fix_memory_limit!","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-fix_memory_limit-21","(context)","<p>Disables bytecode compiling which limits you to 64K scripts\n"],["from_environment","ExecJS::Runtimes","ExecJS/Runtimes.html#method-c-from_environment","()",""],["generate_compile_method","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-generate_compile_method","(path)",""],["json2_source","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-json2_source","()",""],["locate_executable","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-locate_executable","(command)",""],["name","ExecJS::DisabledRuntime","ExecJS/DisabledRuntime.html#method-i-name","()",""],["name","ExecJS::DuktapeRuntime","ExecJS/DuktapeRuntime.html#method-i-name","()",""],["name","ExecJS::MiniRacerRuntime","ExecJS/MiniRacerRuntime.html#method-i-name","()",""],["name","ExecJS::RubyRhinoRuntime","ExecJS/RubyRhinoRuntime.html#method-i-name","()",""],["name","ExecJS::Runtime","ExecJS/Runtime.html#method-i-name","()",""],["names","ExecJS::Runtimes","ExecJS/Runtimes.html#method-c-names","()",""],["new","ExecJS::DuktapeRuntime::Context","ExecJS/DuktapeRuntime/Context.html#method-c-new","(runtime, source = \"\", options = {})",""],["new","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-c-new","(options)",""],["new","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-c-new","(runtime, source = \"\", options = {})",""],["new","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-c-new","(runtime, source = \"\", options={})",""],["new","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-c-new","(runtime, source = \"\", options = {})",""],["new","ExecJS::Runtime::Context","ExecJS/Runtime/Context.html#method-c-new","(runtime, source = \"\", options = {})",""],["root","ExecJS","ExecJS.html#method-c-root","()",""],["runtime=","ExecJS","ExecJS.html#method-c-runtime-3D","(runtime)",""],["runtimes","ExecJS","ExecJS.html#method-c-runtimes","()",""],["runtimes","ExecJS::Runtimes","ExecJS/Runtimes.html#method-c-runtimes","()",""],["shell_escape","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-shell_escape","(*args)",""],["strip_functions!","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-i-strip_functions-21","(value)",""],["translate","ExecJS::MiniRacerRuntime::Context","ExecJS/MiniRacerRuntime/Context.html#method-i-translate","()",""],["unbox","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-unbox","(value)",""],["which","ExecJS::ExternalRuntime","ExecJS/ExternalRuntime.html#method-i-which","(command)",""],["windows?","ExecJS","ExecJS.html#method-c-windows-3F","()",""],["wrap_error","ExecJS::DuktapeRuntime::Context","ExecJS/DuktapeRuntime/Context.html#method-i-wrap_error","(e)",""],["wrap_error","ExecJS::RubyRhinoRuntime::Context","ExecJS/RubyRhinoRuntime/Context.html#method-i-wrap_error","(e)",""],["write_to_tempfile","ExecJS::ExternalRuntime::Context","ExecJS/ExternalRuntime/Context.html#method-i-write_to_tempfile","(contents)",""],["jsc_runner.js","","lib/execjs/support/jsc_runner_js.html","","<p>(function(program, execJS) { execJS(program) })(function() { #{source} }, function(program) {\n\n<pre>var output; ...</pre>\n"],["jscript_runner.js","","lib/execjs/support/jscript_runner_js.html","","<p>(function(program, execJS) { execJS(program) })(function() {\n\n<pre>return eval(#{encode_source(source)});</pre>\n<p>}, …\n"],["json2.js","","lib/execjs/support/json2_js.html","","<p>/*\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">http</span><span class=\"ruby-value\">:/</span><span class=\"ruby-operator\">/</span><span class=\"ruby-identifier\">www</span>.<span class=\"ruby-constant\">JSON</span>.<span class=\"ruby-identifier\">org</span><span class=\"ruby-operator\">/</span><span class=\"ruby-identifier\">json2</span>.<span class=\"ruby-identifier\">js</span>\n<span class=\"ruby-value\">2011</span><span class=\"ruby-value\">-01</span><span class=\"ruby-value\">-18</span>\n\n<span class=\"ruby-constant\">Public</span> <span class=\"ruby-constant\">Domain</span>.\n\n<span class=\"ruby-constant\">NO</span> <span class=\"ruby-constant\">WARRANTY</span> <span class=\"ruby-constant\">EXPRESSED</span> <span class=\"ruby-constant\">OR</span> <span class=\"ruby-constant\">IMPLIED</span>. <span class=\"ruby-constant\">USE</span> <span class=\"ruby-constant\">AT</span> <span class=\"ruby-constant\">YOUR</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["node_runner.js","","lib/execjs/support/node_runner_js.html","","<p>(function(program, execJS) { execJS(program) })(function(global, process, module, exports, require, console, …\n"],["spidermonkey_runner.js","","lib/execjs/support/spidermonkey_runner_js.html","","<p>(function(program, execJS) { execJS(program) })(function() { #{source} }, function(program) {\n\n<pre>var output; ...</pre>\n"],["v8_runner.js","","lib/execjs/support/v8_runner_js.html","","<p>(function(program, execJS) { execJS(program) })(function() { #{source} }, function(program) {\n\n<pre>var output; ...</pre>\n"]]}}